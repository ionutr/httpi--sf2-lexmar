<?php

namespace Proxies\__CG__\Httpi\Bundle\CoreBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Import extends \Httpi\Bundle\CoreBundle\Entity\Import implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setObjectFqn($objectFqn)
    {
        $this->__load();
        return parent::setObjectFqn($objectFqn);
    }

    public function getObjectFqn()
    {
        $this->__load();
        return parent::getObjectFqn();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setData($data)
    {
        $this->__load();
        return parent::setData($data);
    }

    public function getData()
    {
        $this->__load();
        return parent::getData();
    }

    public function setStartedAt($startedAt)
    {
        $this->__load();
        return parent::setStartedAt($startedAt);
    }

    public function getStartedAt()
    {
        $this->__load();
        return parent::getStartedAt();
    }

    public function setEndedAt($endedAt)
    {
        $this->__load();
        return parent::setEndedAt($endedAt);
    }

    public function getEndedAt()
    {
        $this->__load();
        return parent::getEndedAt();
    }

    public function setSuccess($success)
    {
        $this->__load();
        return parent::setSuccess($success);
    }

    public function getSuccess()
    {
        $this->__load();
        return parent::getSuccess();
    }

    public function setMessage($message)
    {
        $this->__load();
        return parent::setMessage($message);
    }

    public function getMessage()
    {
        $this->__load();
        return parent::getMessage();
    }

    public function setSize($size)
    {
        $this->__load();
        return parent::setSize($size);
    }

    public function getSize()
    {
        $this->__load();
        return parent::getSize();
    }

    public function setRows($rows)
    {
        $this->__load();
        return parent::setRows($rows);
    }

    public function getRows()
    {
        $this->__load();
        return parent::getRows();
    }

    public function setInfo(\Httpi\Bundle\CoreBundle\Entity\Info $info = NULL)
    {
        $this->__load();
        return parent::setInfo($info);
    }

    public function getInfo()
    {
        $this->__load();
        return parent::getInfo();
    }

    public function setFiles(\Httpi\Bundle\CoreBundle\Entity\File $files = NULL)
    {
        $this->__load();
        return parent::setFiles($files);
    }

    public function getFiles()
    {
        $this->__load();
        return parent::getFiles();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'objectFqn', 'title', 'description', 'data', 'startedAt', 'endedAt', 'success', 'message', 'size', 'rows', 'info', 'files');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}